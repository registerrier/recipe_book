name: Build Jupyter Book

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Check out repository
      uses: actions/checkout@v3

    # Step 2: Set up Miniconda
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true

    # Step 3: Install Jupyter Book and nb_conda_kernels
    - name: Install Jupyter Book and dependencies
      run: |
        conda install -c conda-forge jupyter-book nb_conda_kernels mamba gammapy -y

    # Step 4: Set and restore cached _build/
    - name: Restore cache
      uses: actions/cache@v3
      env:
        cache-name: recipe-build-cache
      with:
        path: _build/.jupyter_cache
        key: ${{ runner.os }}-recipe-book-${{ env.cache-name }}

    # Step 5: Set up Conda environments for each kernel
    - name: Set up Conda environments
      run: |
        for env_file in $(find recipes/* -name "env.yml"); do
          # Extract the environment name from the env.yml file
          env_name=$(grep -E '^name:' $env_file | awk '{print $2}')
          echo "Creating environment $env_name from $env_file"
          
          # Create or update the environment
          mamba env create -f $env_file -|| conda env update -f $env_file 

          # Register the environment as a Jupyter kernel
          conda run -n $env_name python -m ipykernel install --user --name=$env_name --display-name "Python ($env_name)"
        done

     # Step 6: Download Gammapy datasets and set GAMMAPY_DATA
    - name: Download Gammapy Datasets and Set GAMMAPY_DATA
      run: |
        # Activate the environment where Gammapy is installed
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate base 
        
        # Download datasets (not in the same directory to avoid including md files in jupyter book)
        gammapy download datasets --release 1.2 --out $GITHUB_WORKSPACE/../gammapy-datasets/
        
        # Set the GAMMAPY_DATA environment variable
        export GAMMAPY_DATA=$GITHUB_WORKSPACE/../gammapy-datasets/1.2
        echo "GAMMAPY_DATA=$GAMMAPY_DATA" >> $GITHUB_ENV
        echo "Datasets downloaded to $GAMMAPY_DATA and GAMMAPY_DATA set."

    # Step 7: Build the Jupyter Book
    - name: Build Jupyter Book
      run: |
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate base  
        jupyter-book build . -n

    # Step 8: Upload the built book as an artifact
    - name: Upload HTML output
      uses: actions/upload-pages-artifact@v3
      with:
        name: jupyter-book-html
        path: _build/html/

  # Deploy the book's HTML to GitHub Pages
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses:
          actions/deploy-pages@v3
        with:
          artifact_name: jupyter-book-html
#      with:
#        github_token: ${{ secrets.RECIPE_SECRET }}
      # Deploy to the github-pages environment
#      environment:
#        publish_dir: _build/html/